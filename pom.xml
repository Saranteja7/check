<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.vzw.dvs</groupId>
	<artifactId>poc_config</artifactId>
	<version>1.0.0</version>
	<name>poc_config</name>
	<packaging>jar</packaging>
	<description>Config server for customer service</description>


	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR3</spring-cloud.version>
		<packaging.type>jar</packaging.type>
        <image.base.path>dev</image.base.path>
        <docker.maven.plugin>0.4.13</docker.maven.plugin>
        <scm.maven.plugin>1.9.5</scm.maven.plugin>
		<image.name>poc_config</image.name>
<!--		<orbpm.docker.registry>vzw/b6vv/poc</orbpm.docker.registry>-->
<!--		<docker.registry.baseurl>oneartifactory.verizon.com:8091</docker.registry.baseurl>-->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <version>2.1.8.RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>5.1.9.RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
            <version>2.1.4.RELEASE</version>
        </dependency>


    </dependencies>

	<build>
		<finalName>poc_config</finalName>
		<plugins>
			 <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- Build an executable JAR -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${maven.jar.main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<configuration>
							<target>
								<echo>basedir: ${basedir}</echo>
								<echo>version: ${project.version}</echo>
								<echo>project.basedir: ${project.basedir}</echo>
								<echo>project.baseUri: ${project.baseUri}</echo>
								<echo>project.version: ${project.version}</echo>
								<echo>project.groupId: ${project.groupId}</echo>
								<echo>project.artifactId: ${project.artifactId}</echo>
								<echo>project.name: ${project.name}</echo>
								<echo>project.description: ${project.description}</echo>
								<echo>project.build.sourceDirectory:
									${project.build.sourceDirectory}</echo>
								<echo>project.build.scriptSourceDirectory:
									${project.build.scriptSourceDirectory}</echo>
								<echo>project.build.testSourceDirectory:
									${project.build.testSourceDirectory}</echo>
								<echo>project.build.outputDirectory:
									${project.build.outputDirectory}</echo>
								<echo>project.build.testOutputDirectory:
									${project.build.testOutputDirectory}</echo>
								<echo>project.build.directory: ${project.build.directory}</echo>
								<echo>final jar name :
									${project.build.finalName}.${packaging.type}</echo>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin}</version>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<dockerDirectory>${project.basedir}/target/classes</dockerDirectory>
							<imageName>test/${image.name}:${project.version}</imageName>
							<buildArgs>
								<jar_name>${project.artifactId}</jar_name>
								<version>${project.version}</version>
								<packaging_type>${packaging.type}</packaging_type>
							</buildArgs>
						</configuration>
					</execution>
					<execution>
						<id>tag-image</id>
						<phase>install</phase>
						<goals>
							<goal>tag</goal>
						</goals>
<!--						<configuration>-->
<!--							<image>test/${image.name}:${project.version}</image>-->
<!--							<newName>${docker.registry.baseurl}/${orbpm.docker.registry}/${image.base.path}/${image.name}:${project.version}</newName>-->
<!--						</configuration>-->
					</execution>
					<execution>
						<id>push-image</id>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
<!--						<configuration>-->
<!--							<imageName>${docker.registry.baseurl}/${orbpm.docker.registry}/${image.base.path}/${image.name}:${project.version}</imageName>-->
<!--						</configuration>-->
					</execution>
				</executions>
<!--				<configuration>-->
<!--					<serverId>docker-hub</serverId>-->
<!--					<registryUrl>https://${docker.registry.baseurl}/v2/</registryUrl>-->
<!--				</configuration>-->
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources-3</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/target/docker</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}</directory>
									<include>${project.artifactId}.${packaging.type}</include>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

</project>
